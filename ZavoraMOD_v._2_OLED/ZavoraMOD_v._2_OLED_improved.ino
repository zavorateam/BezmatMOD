/*
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
    Переделанная прошивка GyverMOD(aka BezmatMOD) v2.07 под OLED дисплей 128x32 px  
  ВСЕ НАСТРОЙКИ В ПАКЕТЕ "Settings.h"
   
  ФУНКЦИОНАЛЬНОСТЬ:
    -меню и подменю настроек
    -анимированная индикация заряда батареи с улучшенным интерфейсом
    -индикация подключенной зарядки на дисплее и защита
    -запрет на парение при зарядке акб
    -энергосбережение (понижение яркости при ожидании)
    -улучшенное управление (кликание зажатием кнопки)
    -предупреждение о разряде аккумулятора со звуковой индикацией
    -игра flappyBird с таблицей рекордов
    -расширенная статистика использования (общее время и последняя затяжка)
    -отображение версии прошивки
    
  СТРУКТУРА ПРОЕКТА:
    -Settings.h - все настройки и конфигурации
    -vape.h/cpp - основные функции управления вейпом
    -Voltages.h/cpp - контроль напряжения и мощности
    -Drawable.h/cpp - отрисовка элементов интерфейса
    -images.h - изображения и анимации (используйте https://javl.github.io/image2cpp/ для конвертации)
    -Game.h/cpp - игровая логика
    -Button.h/cpp - обработка нажатий кнопок
    -Externalizable.h/cpp - работа с EEPROM памятью
    
  created by EM1LJAN                                             11.08.2021
  modded by Metallolom/Vaultek                                   05.05.2023
  improved version by Vaultek                                    05.05.2025
  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/

#include "Settings.h"
#include <TimerOne.h>    
#include "vape.h"
#include "Voltages.h"

// Основная программа
int main(void){
  // Инициализация Arduino
  init();
  #if defined(USBCON)
    USBDevice.attach();
  #endif

  // Инициализация ШИМ с частотой 1500Гц
  Timer1.initialize(1500); 
  
  // Настройка пинов ввода/вывода
  pinMode(battery, INPUT);        // Пин для измерения напряжения АКБ
  pinMode(viewChardge, INPUT);    // Пин для определения зарядки
  pinMode(mosfet, OUTPUT);        // Пин управления ключом (MOSFET)
  digitalWrite(mosfet, LOW);      // Начальное положение - выключено
  
  // Запуск основного цикла вейпа
  Vape vape;
  vape.run();
    
  // Режим ожидания/сна
  while(Vape::wake_up_flag){ 
    vape.wake_puzzle();  
  }
  
  return 0;  
} 